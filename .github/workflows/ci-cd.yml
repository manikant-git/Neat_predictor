name: CI/CD Pipeline for NEETRankPredictor

# Trigger the workflow on push to main branch or pull request to main branch
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

# Jobs to run
jobs:
  test:
    runs-on: ubuntu-latest # Use the latest Ubuntu runner

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9' # Specify your Python version

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Step 4: Run tests (if you have tests)
      - name: Run tests
        run: |
          python -m pytest tests/ # Replace with your test command

  lint:
    runs-on: ubuntu-latest
    needs: test # Ensure linting runs after tests pass

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install linting tools
      - name: Install linting tools
        run: |
          pip install black flake8

      # Step 4: Run linting
      - name: Run Black (code formatting)
        run: |
          black --check .

      - name: Run Flake8 (code linting)
        run: |
          flake8 .

  deploy:
    runs-on: ubuntu-latest
    needs: lint # Ensure deployment runs after linting passes

    steps:
      # Step 1: Checkout the code
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r requirements.txt

      # Step 4: Deploy (example: save model artifacts)
      - name: Save model artifacts
        run: |
          python save_model.py # Replace with your deployment script
